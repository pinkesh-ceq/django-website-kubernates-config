
name: Kubernetes_configuration

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  workflow_dispatch:

env:
  CLUSTER_NAME: Pinkesh-argoCD
  # AWS_REGION: ap-south-1
  DEPLOYMENT_FILE: deployment.yml

jobs:

  k8s_deploy:
  
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:

      - uses: actions/checkout@v3
      
      # - name: Configure AWS Credentials
      # uses: aws-actions/configure-aws-credentials@v1
      # with:
      #   aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #   aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #   aws-region: ap-south-1

      - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ap-south-1
        role-to-assume: arn:aws:iam::676634049556:role/GitOps-argoCd-Role
        role-session-name: MySessionName
          
      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
          echo "$(<kubectl.sha256) kubectl" | sha256sum --check
            
            sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
            kubectl version --client

      - name: Checkout
        uses: actions/checkout@v3
        
      - name: update kubeconfig
        run: aws eks update-kubeconfig --name $CLUSTER_NAME --region ap-south-1
      
      - name: deployment to eks
        run: |
         kubectl apply -f $DEPLOYMENT_FILE
         kubectl get pods




      
